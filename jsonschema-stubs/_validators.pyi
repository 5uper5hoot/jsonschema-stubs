# Stubs for jsonschema._validators (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

def patternProperties(validator: Any, patternProperties: Any, instance: Any, schema: Any) -> None: ...
def propertyNames(validator: Any, propertyNames: Any, instance: Any, schema: Any) -> None: ...
def additionalProperties(validator: Any, aP: Any, instance: Any, schema: Any) -> None: ...
def items(validator: Any, items: Any, instance: Any, schema: Any) -> None: ...
def additionalItems(validator: Any, aI: Any, instance: Any, schema: Any) -> None: ...
def const(validator: Any, const: Any, instance: Any, schema: Any) -> None: ...
def contains(validator: Any, contains: Any, instance: Any, schema: Any) -> None: ...
def exclusiveMinimum(validator: Any, minimum: Any, instance: Any, schema: Any) -> None: ...
def exclusiveMaximum(validator: Any, maximum: Any, instance: Any, schema: Any) -> None: ...
def minimum(validator: Any, minimum: Any, instance: Any, schema: Any) -> None: ...
def maximum(validator: Any, maximum: Any, instance: Any, schema: Any) -> None: ...
def multipleOf(validator: Any, dB: Any, instance: Any, schema: Any) -> None: ...
def minItems(validator: Any, mI: Any, instance: Any, schema: Any) -> None: ...
def maxItems(validator: Any, mI: Any, instance: Any, schema: Any) -> None: ...
def uniqueItems(validator: Any, uI: Any, instance: Any, schema: Any) -> None: ...
def pattern(validator: Any, patrn: Any, instance: Any, schema: Any) -> None: ...
def format(validator: Any, format: Any, instance: Any, schema: Any) -> None: ...
def minLength(validator: Any, mL: Any, instance: Any, schema: Any) -> None: ...
def maxLength(validator: Any, mL: Any, instance: Any, schema: Any) -> None: ...
def dependencies(validator: Any, dependencies: Any, instance: Any, schema: Any) -> None: ...
def enum(validator: Any, enums: Any, instance: Any, schema: Any) -> None: ...
def ref(validator: Any, ref: Any, instance: Any, schema: Any) -> None: ...
def type(validator: Any, types: Any, instance: Any, schema: Any) -> None: ...
def properties(validator: Any, properties: Any, instance: Any, schema: Any) -> None: ...
def required(validator: Any, required: Any, instance: Any, schema: Any) -> None: ...
def minProperties(validator: Any, mP: Any, instance: Any, schema: Any) -> None: ...
def maxProperties(validator: Any, mP: Any, instance: Any, schema: Any) -> None: ...
def allOf(validator: Any, allOf: Any, instance: Any, schema: Any) -> None: ...
def anyOf(validator: Any, anyOf: Any, instance: Any, schema: Any) -> None: ...
def oneOf(validator: Any, oneOf: Any, instance: Any, schema: Any) -> None: ...
def not_(validator: Any, not_schema: Any, instance: Any, schema: Any) -> None: ...
def if_(validator: Any, if_schema: Any, instance: Any, schema: Any) -> None: ...
